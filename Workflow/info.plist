<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.alfredapp.vitor.cleanworkflowdata</string>
	<key>connections</key>
	<dict>
		<key>FB10D2CE-7CC5-42C2-8B70-97B7DD15574F</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>F85456BB-EE45-4DF8-BE05-4F0697DFB598</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>74623E9A-3065-4394-B973-8D44E36D1CA1</string>
				<key>modifiers</key>
				<integer>1048576</integer>
				<key>modifiersubtext</key>
				<string>Copy List to Clipboard</string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Vítor Galvão</string>
	<key>description</key>
	<string>Trash Data and Cache folders of uninstalled workflows</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Clean Workflow Data</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>tasksettings</key>
				<dict/>
				<key>taskuid</key>
				<string>com.alfredapp.automation.core/files-and-folders/path.trash</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.automation.task</string>
			<key>uid</key>
			<string>F85456BB-EE45-4DF8-BE05-4F0697DFB598</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<true/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>{var:clean_keyword}</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Grabbin workflows list…</string>
				<key>script</key>
				<string>// Constants
const fileManager = $.NSFileManager.defaultManager

// Helpers
function envVar(varName) {
  return $.NSProcessInfo
    .processInfo
    .environment
    .objectForKey(varName).js
}

function readFile(path) {
  return $.NSString.stringWithContentsOfFileEncodingError(path, $.NSUTF8StringEncoding, undefined).js
}

function dirContents(path) {
  const pathExpanded = $(path)
  const pathURL = $.NSURL.fileURLWithPath(pathExpanded)

  return fileManager
    .contentsOfDirectoryAtURLIncludingPropertiesForKeysOptionsError(
      pathURL,
      undefined,
      $.NSDirectoryEnumerationSkipsHiddenFiles,
      undefined
    ).js
    .map(p =&gt; p.path.js)
}

function getBID(workflowPath) {
  const task = $.NSTask.alloc.init
  const stdout = $.NSPipe.pipe

  task.executableURL = $.NSURL.fileURLWithPath("/usr/libexec/PlistBuddy")
  task.arguments = ["-c", `Print :bundleid`, `${workflowPath}/info.plist`]
  task.standardOutput = stdout
  task.launchAndReturnError(false)

  const dataOut = stdout.fileHandleForReading.readDataToEndOfFile
  const stringOut = $.NSString.alloc.initWithDataEncoding(dataOut, $.NSUTF8StringEncoding).js

  return stringOut.replace(/\n$/, "")
}

// Main
const dataDir = $("~/Library/Application Support/Alfred/Workflow Data").stringByExpandingTildeInPath.js
const cacheDir = $("~/Library/Caches/com.runningwithcrayons.Alfred/Workflow Data").stringByExpandingTildeInPath.js
const workflowsDir = `${envVar("alfred_preferences")}/workflows`

const dataBIDs = dirContents(dataDir)
  .map(p =&gt; $(p).lastPathComponent.js)

const cacheBIDs = dirContents(cacheDir)
  .map(p =&gt; $(p).lastPathComponent.js)

const installedBIDs = dirContents(workflowsDir)
  .map(p =&gt; getBID(p))
  .filter(p =&gt; p.length &gt; 0) // Ignore workflows without a BID

const outdatedDataBIDs = dataBIDs.filter(bid =&gt; !installedBIDs.includes(bid))
const outdatedCacheBIDs = cacheBIDs.filter(bid =&gt; !installedBIDs.includes(bid))
const joinedBIDs = outdatedDataBIDs.concat(outdatedCacheBIDs)
const outdatedNumber = Array.from(new Set(joinedBIDs)).length

const outdatedDataDirs =   outdatedDataBIDs.map(p =&gt; `${dataDir}/${p}`)
const outdatedCacheDirs = outdatedCacheBIDs.map(p =&gt; `${cacheDir}/${p}`)
const deletableDirs = outdatedDataDirs.concat(outdatedCacheDirs)

if (outdatedNumber === 0) {
  JSON.stringify({ items: [{
    title: "No Outdated Data Found",
    valid: false
  }]})
} else {
  JSON.stringify({ items: [{
    title: `Found Outdated Data for ${outdatedNumber} Workflows`,
    subtitle: `${outdatedDataBIDs.length} data folders and ${outdatedCacheBIDs.length} cache folders`,
    arg: deletableDirs
  }]})
}</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>skipuniversalaction</key>
				<true/>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>{const:alfred_workflow_name}</string>
				<key>type</key>
				<integer>7</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>FB10D2CE-7CC5-42C2-8B70-97B7DD15574F</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>autopaste</key>
				<false/>
				<key>clipboardtext</key>
				<string>{query}</string>
				<key>ignoredynamicplaceholders</key>
				<false/>
				<key>transient</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.clipboard</string>
			<key>uid</key>
			<string>74623E9A-3065-4394-B973-8D44E36D1CA1</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>## Usage

Find data and cache folders from uninstalled workflows via the `delold` keyword.

![Showing results of found folders](images/about/delold.png)

* &lt;kbd&gt;↩&lt;/kbd&gt; Trash found folders.
* &lt;kbd&gt;⌘&lt;/kbd&gt;&lt;kbd&gt;↩&lt;/kbd&gt; Copy folder paths to clipboard.</string>
	<key>uidata</key>
	<dict>
		<key>74623E9A-3065-4394-B973-8D44E36D1CA1</key>
		<dict>
			<key>xpos</key>
			<real>250</real>
			<key>ypos</key>
			<real>185</real>
		</dict>
		<key>F85456BB-EE45-4DF8-BE05-4F0697DFB598</key>
		<dict>
			<key>xpos</key>
			<real>250</real>
			<key>ypos</key>
			<real>40</real>
		</dict>
		<key>FB10D2CE-7CC5-42C2-8B70-97B7DD15574F</key>
		<dict>
			<key>xpos</key>
			<real>50</real>
			<key>ypos</key>
			<real>40</real>
		</dict>
	</dict>
	<key>userconfigurationconfig</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string>delold</string>
				<key>placeholder</key>
				<string></string>
				<key>required</key>
				<false/>
				<key>trim</key>
				<true/>
			</dict>
			<key>description</key>
			<string></string>
			<key>label</key>
			<string>Clean Keyword</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>clean_keyword</string>
		</dict>
	</array>
	<key>version</key>
	<string>2024.2</string>
	<key>webaddress</key>
	<string>https://github.com/alfredapp/clean-workflow-data-workflow/</string>
</dict>
</plist>
